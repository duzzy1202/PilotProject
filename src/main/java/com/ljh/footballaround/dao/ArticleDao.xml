<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljh.footballaround.dao.ArticleDao">
	<select id="getForPrintArticles" resultMap="article">
		SELECT A.*, M.nickname
		AS extra__writer,
		IFNULL(SUM(AR.point), 0) AS extra__likePoint,
		IFNULL(SUM(AD.point), 0) AS extra__dislikePoint
		FROM article AS A
		INNER JOIN board AS B
		ON A.boardId = B.id
		INNER JOIN `member` AS M
		ON A.memberId = M.id
		LEFT JOIN articleRecommend AS AR
		ON A.id = AR.articleId
		LEFT JOIN articleDislike AS AD
		ON A.id = AD.articleId
		WHERE A.displayStatus = 1
		AND boardId = #{boardId}
		AND A.delStatus = 0
		GROUP BY A.id
		ORDER BY A.id DESC
	</select>

	<select id="getForPrintArticleById" resultMap="article">
		SELECT A.*,
		M.name AS extra__writer,
		IFNULL(SUM(AR.point), 0) AS extra__likePoint,
		IFNULL(SUM(AD.point), 0) AS extra__dislikePoint
		FROM article AS A
		INNER JOIN `member` AS M
		ON A.memberId = M.id
		LEFT JOIN articleRecommend AS AR
		ON A.id = AR.articleId
		LEFT JOIN articleDislike AS AD
		ON A.id = AD.articleId
		WHERE A.displayStatus = 1
		AND A.delStatus = 0
		AND A.id = #{id}
		GROUP BY A.id
	</select>

	<select id="getArticleById" resultType="Article">
		SELECT *
		FROM
		article
		WHERE
		id = #{id}
	</select>
	
	<select id="getBoardByCode" resultType="Board">
		SELECT *
		FROM
		board
		WHERE
		`code` = #{code}
	</select>
	
	<select id="getBoardByLeagueId" resultType="Board">
		SELECT *
		FROM
		board
		WHERE leagueId = #{leagueId}
	</select>

	<insert id="write" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO article
		SET regDate = NOW(),
		updateDate = NOW(),
		title = #{title},
		body = #{body},
		memberId = #{memberId},
		boardId = #{boardId},
		displayStatus = 1
	</insert>

	<update id="modify">
		UPDATE article
		<set>
			updateDate = NOW(),
			<if test="title != null">title = #{title},</if>
			<if test="body != null">body = #{body},</if>
		</set>
		WHERE id = #{id}
	</update>
	
	<update id="deleteArticleById">
		UPDATE article
		SET delDate = NOW(),
		delStatus = 1,
		displayStatus = 0
		WHERE id = #{id}
	</update>
	
	<select id="getArticlesByMemberId" resultMap="article">
		SELECT A.*,
		B.name AS extra__boardName,
		B.code AS extra__boardCode
		FROM article AS A
		INNER JOIN board AS B
		ON A.boardId = B.id
		WHERE A.displayStatus = 1
		AND memberId = #{memberId}
		AND A.delStatus = 0
		ORDER BY A.id DESC
	</select>
	
	<select id="getLastestNotice" resultMap="article">
		SELECT *
		FROM article
		WHERE displayStatus = 1
		AND delStatus = 0
		AND boardId = 1
		ORDER BY id DESC
		LIMIT 1
	</select>
	
	<update id="updateHitOfArticle">
		UPDATE article
		SET updateDate = NOW(),
		hit = #{hits}
		WHERE id = #{id}
	</update>
	
	<select id="getLikePointByMemberId" resultType="int">
		SELECT
		IFNULL(SUM(AR.point), 0) AS `recommenPoint`
		FROM articleRecommend AS AR
		WHERE
		AR.articleId = #{id}
		AND AR.memberId = #{memberId}
	</select>
	
	<select id="getDislikePointByMemberId" resultType="int">
		SELECT
		IFNULL(SUM(AR.point), 0) AS `dislikePoint`
		FROM articleDislike AS AR
		WHERE
		AR.articleId = #{id}
		AND AR.memberId = #{memberId}
	</select>

	<insert id="likeArticle" parameterType="map">
		INSERT INTO articleRecommend
		SET regDate
		= NOW(),
		articleId = #{id},
		memberId = #{memberId},
		`point` = 1
	</insert>
	
	<insert id="dislikeArticle" parameterType="map">
		INSERT INTO articleDislike
		SET regDate
		= NOW(),
		articleId = #{id},
		memberId = #{memberId},
		`point` = 1
	</insert>
	
	<resultMap type="Article" id="article">
		<id property="id" column="id" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delDate" column="delDate" />
		<id property="delStatus" column="delStatus" />
		<id property="title" column="title" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<id property="boardId" column="boardId" />
		<id property="hit" column="hit" />
		<id property="recommend" column="recommend" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
			<id property="boardName" column="extra__boardName" />
			<id property="boardCode" column="extra__boardCode" />
			<id property="likePoint" column="extra__likePoint" />
			<id property="dislikePoint" column="extra__dislikePoint" />
		</association>
	</resultMap>
	
</mapper>

